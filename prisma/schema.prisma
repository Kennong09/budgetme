generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model User {
  instance_id                  String?              @db.Uuid
  id                           String               @id @default(uuid()) @db.Uuid
  aud                          String?              @db.VarChar(255)
  role                         String?              @db.VarChar(255)
  email                        String?              @db.VarChar(255)
  encrypted_password           String?              @db.VarChar(255)
  email_confirmed_at           DateTime?            @db.Timestamptz(6)
  invited_at                   DateTime?            @db.Timestamptz(6)
  confirmation_token           String?              @db.VarChar(255)
  confirmation_sent_at         DateTime?            @db.Timestamptz(6)
  recovery_token               String?              @db.VarChar(255)
  recovery_sent_at             DateTime?            @db.Timestamptz(6)
  email_change_token_new       String?              @db.VarChar(255)
  email_change                 String?              @db.VarChar(255)
  email_change_sent_at         DateTime?            @db.Timestamptz(6)
  last_sign_in_at              DateTime?            @db.Timestamptz(6)
  raw_app_meta_data            Json?
  raw_user_meta_data           Json?
  is_super_admin               Boolean?
  createdAt                    DateTime?            @map("created_at") @db.Timestamptz(6)
  updated_at                   DateTime?            @db.Timestamptz(6)
  phone                        String?              @unique
  phone_confirmed_at           DateTime?            @db.Timestamptz(6)
  phone_change                 String?              @default("")
  phone_change_token           String?              @default("") @db.VarChar(255)
  phone_change_sent_at         DateTime?            @db.Timestamptz(6)
  confirmed_at                 DateTime?            @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current   String?              @default("") @db.VarChar(255)
  email_change_confirm_status  Int?                 @default(0) @db.SmallInt
  banned_until                 DateTime?            @db.Timestamptz(6)
  reauthentication_token       String?              @default("") @db.VarChar(255)
  reauthentication_sent_at     DateTime?            @db.Timestamptz(6)
  is_sso_user                  Boolean              @default(false)
  deleted_at                   DateTime?            @db.Timestamptz(6)
  is_anonymous                 Boolean              @default(false)
  identities                   identities[]
  mfa_factors                  mfa_factors[]
  one_time_tokens              one_time_tokens[]
  sessions                     sessions[]
  accounts                     Account[]
  admin_activities             admin_activities[]
  budgets                      Budget[]
  expenseCategories            ExpenseCategory[]
  familiesCreated              Family[]             @relation("FamilyCreator")
  family_join_requests         FamilyJoinRequest[]
  familyMemberships            FamilyMember[]
  goal_contributions           goal_contributions[]
  goals_goals_shared_byTousers Goal[]               @relation("goals_shared_byTousers")
  goals                        Goal[]
  incomeCategories             IncomeCategory[]
  profiles                     Profile?
  transactions                 Transaction[]

  @@index([instance_id])
  @@index([is_anonymous])
  @@map("users")
  @@schema("auth")
}

model Profile {
  id        String    @id @db.Uuid
  fullName  String?   @map("full_name")
  avatarUrl String?   @map("avatar_url")
  email     String?
  role      String?   @default("user")
  createdAt DateTime? @default(dbgenerated("timezone('utc'::text, now())")) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @default(dbgenerated("timezone('utc'::text, now())")) @updatedAt @map("updated_at") @db.Timestamptz(6)
  users     User      @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("profiles")
  @@schema("public")
}

model Family {
  id           String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  familyName   String              @map("family_name") @db.VarChar(255)
  description  String?
  currencyPref String              @default("USD") @map("currency_pref") @db.VarChar(10)
  createdBy    String              @map("created_by") @db.Uuid
  createdAt    DateTime?           @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime?           @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  isPublic     Boolean?            @default(false) @map("is_public")
  status       String?             @default("active") @db.VarChar(50)
  creator      User                @relation("FamilyCreator", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
  joinRequests FamilyJoinRequest[]
  members      FamilyMember[]
  goals        Goal[]

  @@map("families")
  @@schema("public")
}

model FamilyMember {
  id        String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  familyId  String    @map("family_id") @db.Uuid
  userId    String    @map("user_id") @db.Uuid
  role      String    @db.VarChar(50)
  status    String    @db.VarChar(50)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  family    Family    @relation(fields: [familyId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user      User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([familyId, userId])
  @@index([familyId], map: "idx_family_members_family_id")
  @@index([status], map: "idx_family_members_status")
  @@index([userId], map: "idx_family_members_user_id")
  @@map("family_members")
  @@schema("public")
}

model FamilyJoinRequest {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  familyId    String    @map("family_id") @db.Uuid
  userId      String    @map("user_id") @db.Uuid
  status      String
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  processedAt DateTime? @map("processed_at") @db.Timestamptz(6)
  family      Family    @relation(fields: [familyId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users       User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([familyId, userId], map: "unique_family_user")
  @@map("family_join_requests")
  @@schema("public")
}

model Account {
  id           String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId       String        @map("user_id") @db.Uuid
  accountName  String        @map("account_name")
  accountType  String        @map("account_type")
  balance      Decimal       @default(0) @db.Decimal(12, 2)
  status       String        @default("active")
  createdAt    DateTime      @default(now()) @map("created_at") @db.Timestamptz(6)
  user         User          @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transactions Transaction[]

  @@map("accounts")
  @@schema("public")
}

model IncomeCategory {
  id           String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId       String   @map("user_id") @db.Uuid
  categoryName String   @map("category_name")
  icon         String?
  isDefault    Boolean? @default(false) @map("is_default")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  user         User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("income_categories")
  @@schema("public")
}

model ExpenseCategory {
  id           String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId       String   @map("user_id") @db.Uuid
  categoryName String   @map("category_name")
  icon         String?
  isDefault    Boolean? @default(false) @map("is_default")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  budgets      Budget[]
  user         User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("expense_categories")
  @@schema("public")
}

model Goal {
  id                           String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId                       String               @map("user_id") @db.Uuid
  goalName                     String               @map("goal_name")
  targetAmount                 Decimal              @map("target_amount") @db.Decimal(12, 2)
  currentAmount                Decimal              @default(0) @map("current_amount") @db.Decimal(12, 2)
  targetDate                   DateTime?            @map("target_date") @db.Date
  priority                     String               @default("medium")
  status                       String               @default("in_progress")
  createdAt                    DateTime             @default(now()) @map("created_at") @db.Timestamptz(6)
  notes                        String?
  updatedAt                    DateTime             @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  family_id                    String?              @db.Uuid
  is_shared                    Boolean?             @default(false)
  shared_by                    String?              @db.Uuid
  goal_contributions           goal_contributions[]
  families                     Family?              @relation(fields: [family_id], references: [id], onUpdate: NoAction)
  users_goals_shared_byTousers User?                @relation("goals_shared_byTousers", fields: [shared_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                         User                 @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transactions                 Transaction[]

  @@index([family_id], map: "idx_goals_family_id")
  @@index([priority], map: "idx_goals_priority")
  @@index([status], map: "idx_goals_status")
  @@index([targetDate], map: "idx_goals_target_date")
  @@index([userId], map: "idx_goals_user_id")
  @@map("goals")
  @@schema("public")
}

model Transaction {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  date        DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  amount      Decimal   @db.Decimal(12, 2)
  notes       String?
  type        String    @db.VarChar(50)
  category    String?   @db.VarChar(100)
  accountId   String?   @map("account_id") @db.Uuid
  goalId      String?   @map("goal_id") @db.Uuid
  userId      String    @map("user_id") @db.Uuid
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  category_id String?   @db.Uuid
  account     Account?  @relation(fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  goal        Goal?     @relation(fields: [goalId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([accountId], map: "idx_transactions_account_id")
  @@index([category], map: "idx_transactions_category")
  @@index([category_id], map: "idx_transactions_category_id")
  @@index([date], map: "idx_transactions_date")
  @@index([goalId], map: "idx_transactions_goal_id")
  @@index([type], map: "idx_transactions_type")
  @@index([userId], map: "idx_transactions_user_id")
  @@map("transactions")
  @@schema("public")
}

model Budget {
  id         String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId     String          @map("user_id") @db.Uuid
  categoryId String          @map("category_id") @db.Uuid
  amount     Decimal         @db.Decimal(12, 2)
  spent      Decimal         @default(0) @db.Decimal(12, 2)
  period     String
  startDate  DateTime        @map("start_date") @db.Date
  endDate    DateTime        @map("end_date") @db.Date
  createdAt  DateTime        @default(now()) @map("created_at") @db.Timestamptz(6)
  category   ExpenseCategory @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       User            @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([categoryId], map: "idx_budgets_category_id")
  @@index([period], map: "idx_budgets_period")
  @@index([startDate], map: "idx_budgets_start_date")
  @@index([userId], map: "idx_budgets_user_id")
  @@map("budgets")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           User      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                User             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      User                @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          User             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model admin_activities {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  admin_id    String    @db.Uuid
  action      String
  entity_type String
  entity_id   String?
  details     Json?
  created_at  DateTime? @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  users       User      @relation(fields: [admin_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model appointments {
  id               String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_name    String   @db.VarChar(100)
  customer_email   String   @db.VarChar(100)
  customer_phone   String   @db.VarChar(20)
  appointment_date DateTime @db.Date
  appointment_time DateTime @db.Time(6)
  purpose          String   @db.VarChar(20)
  status           String   @default("pending") @db.VarChar(20)
  notes            String?
  plan_type        String?  @db.VarChar(50)
  plan_description String?  @db.VarChar(100)
  created_at       DateTime @default(now()) @db.Timestamptz(6)

  @@index([appointment_date], map: "idx_appointments_date")
  @@index([customer_email], map: "idx_appointments_email")
  @@index([plan_type], map: "idx_appointments_plan_type")
  @@index([status], map: "idx_appointments_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model budgets_backup {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id     String   @db.Uuid
  category_id String   @db.Uuid
  amount      Decimal  @db.Decimal(12, 2)
  spent       Decimal  @default(0) @db.Decimal(12, 2)
  period      String
  start_date  DateTime @db.Date
  end_date    DateTime @db.Date
  created_at  DateTime @default(now()) @db.Timestamptz(6)

  @@index([category_id])
  @@index([period])
  @@index([start_date])
  @@index([user_id])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model goal_contributions {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  goal_id    String    @db.Uuid
  user_id    String    @db.Uuid
  amount     Decimal   @default(0) @db.Decimal(10, 2)
  date       DateTime? @default(now()) @db.Timestamptz(6)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  goals      Goal      @relation(fields: [goal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      User      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}
